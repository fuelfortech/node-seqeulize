{
  "{\"sourceRoot\":\"/Users/shripal/Desktop/NodebabelSetup\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/shripal/Desktop/NodebabelSetup\",\"filename\":\"/Users/shripal/Desktop/NodebabelSetup/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/shripal/Desktop/NodebabelSetup\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/shripal/Desktop/NodebabelSetup",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/shripal/Desktop/NodebabelSetup",
      "filename": "/Users/shripal/Desktop/NodebabelSetup/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/shripal/Desktop/NodebabelSetup",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/shripal/Desktop/NodebabelSetup/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/shripal/Desktop/NodebabelSetup/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/shripal/Desktop/NodebabelSetup",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _dotenv = _interopRequireDefault(require(\"dotenv\"));\n\nvar _sequelize = _interopRequireDefault(require(\"sequelize\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar app = (0, _express[\"default\"])(); // parse application/x-www-form-urlencoded\n\napp.use(_bodyParser[\"default\"].urlencoded({\n  extended: false\n})); // parse application/json\n\napp.use(_bodyParser[\"default\"].json());\nvar sequelize = new _sequelize[\"default\"]('node', 'root', '', {\n  host: 'localhost',\n  dialect: 'mysql'\n});\nsequelize.authenticate().then(function () {\n  console.log('Connection has been established successfully.');\n})[\"catch\"](function (err) {\n  console.error('Unable to connect to the database:', err);\n});\n\n_dotenv[\"default\"].config();\n\napp.get('/student',\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee(req, res) {\n    var result;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return sequelize.query(\"Select * from student\");\n\n          case 2:\n            result = _context.sent;\n            res.json(result[0]);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}());\napp.post('/student/single',\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(req, res) {\n    var result;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return sequelize.query(\"Select * from student where id=\".concat(req.body.id));\n\n          case 2:\n            result = _context2.sent;\n            res.json(result[0]);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}());\napp.post('/student/search',\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee3(req, res) {\n    var result;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return sequelize.query(\"Select * from student where name like '%\".concat(req.body.name, \"%'\"));\n\n          case 2:\n            result = _context3.sent;\n            res.json(result[0]);\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}());\napp.post('/student',\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee4(req, res) {\n    var result;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return sequelize.query(\"Insert into student values(null,'\".concat(req.body.name, \"','\").concat(req.body.mobile, \"','\").concat(req.body.address, \"')\"));\n\n          case 2:\n            result = _context4.sent;\n            res.json(result);\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function (_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}());\napp[\"delete\"]('/student',\n/*#__PURE__*/\nfunction () {\n  var _ref5 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee5(req, res) {\n    var result;\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return sequelize.query(\"Delete from student where id=\".concat(req.body.id));\n\n          case 2:\n            result = _context5.sent;\n            res.json(result);\n\n          case 4:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function (_x9, _x10) {\n    return _ref5.apply(this, arguments);\n  };\n}());\napp.put('/student',\n/*#__PURE__*/\nfunction () {\n  var _ref6 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee6(req, res) {\n    var result;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return sequelize.query(\"Update student set name='\".concat(req.body.name, \"',mobile='\").concat(req.body.mobile, \"',address='\").concat(req.body.address, \"' where id=\").concat(req.body.id));\n\n          case 2:\n            result = _context6.sent;\n            res.json(result);\n\n          case 4:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function (_x11, _x12) {\n    return _ref6.apply(this, arguments);\n  };\n}());\napp.listen(process.env.PORT, function () {\n  console.log(\"Server Started\");\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImFwcCIsInVzZSIsImJvZHlQYXJzZXIiLCJ1cmxlbmNvZGVkIiwiZXh0ZW5kZWQiLCJqc29uIiwic2VxdWVsaXplIiwiU2VxdWVsaXplIiwiaG9zdCIsImRpYWxlY3QiLCJhdXRoZW50aWNhdGUiLCJ0aGVuIiwiY29uc29sZSIsImxvZyIsImVyciIsImVycm9yIiwiZG90ZW52IiwiY29uZmlnIiwiZ2V0IiwicmVxIiwicmVzIiwicXVlcnkiLCJyZXN1bHQiLCJwb3N0IiwiYm9keSIsImlkIiwibmFtZSIsIm1vYmlsZSIsImFkZHJlc3MiLCJwdXQiLCJsaXN0ZW4iLCJwcm9jZXNzIiwiZW52IiwiUE9SVCJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7QUFFQSxJQUFNQSxHQUFHLEdBQUcsMEJBQVosQyxDQUNBOztBQUNBQSxHQUFHLENBQUNDLEdBQUosQ0FBUUMsdUJBQVdDLFVBQVgsQ0FBc0I7QUFBRUMsRUFBQUEsUUFBUSxFQUFFO0FBQVosQ0FBdEIsQ0FBUixFLENBRUE7O0FBQ0FKLEdBQUcsQ0FBQ0MsR0FBSixDQUFRQyx1QkFBV0csSUFBWCxFQUFSO0FBR0EsSUFBTUMsU0FBUyxHQUFHLElBQUlDLHFCQUFKLENBQWMsTUFBZCxFQUFzQixNQUF0QixFQUE4QixFQUE5QixFQUFrQztBQUNoREMsRUFBQUEsSUFBSSxFQUFFLFdBRDBDO0FBRWhEQyxFQUFBQSxPQUFPLEVBQUU7QUFGdUMsQ0FBbEMsQ0FBbEI7QUFLRUgsU0FBUyxDQUNSSSxZQURELEdBRUNDLElBRkQsQ0FFTSxZQUFNO0FBQ1ZDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLCtDQUFaO0FBQ0QsQ0FKRCxXQUtPLFVBQUFDLEdBQUcsRUFBSTtBQUNaRixFQUFBQSxPQUFPLENBQUNHLEtBQVIsQ0FBYyxvQ0FBZCxFQUFvREQsR0FBcEQ7QUFDRCxDQVBEOztBQVVGRSxtQkFBT0MsTUFBUDs7QUFHQWpCLEdBQUcsQ0FB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LEtBQVYsb0NBQTRDRixHQUFHLENBQUNLLElBQUosQ0FBU0UsSUFBckQsdUJBQXNFUCxHQUFHLENBQUNLLElBQUosQ0FBU0csTUFBL0Usd0JBQW1HUixHQUFHLENBQUNLLElBQUosQ0FBU0ksT0FBNUcsd0JBQWlJVCxHQUFHLENBQUNLLElBQUosQ0FBU0MsRUFBMUksRUFERjs7QUFBQTtBQUNiSCxZQUFBQSxNQURhO0FBRWpCRixZQUFBQSxHQUFHLENBQUNmLElBQUosQ0FBU2lCLE1BQVQ7O0FBRmlCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQW5COztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBT0F0QixHQUFHLENBQUM4QixNQUFKLENBQVdDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxJQUF2QixFQUE0QixZQUFJO0FBQzVCckIsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksZ0JBQVo7QUFDSCxDQUZEIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9zaHJpcGFsL0Rlc2t0b3AvTm9kZWJhYmVsU2V0dXAiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJ1xuaW1wb3J0IGJvZHlQYXJzZXIgZnJvbSAnYm9keS1wYXJzZXInXG5pbXBvcnQgZG90ZW52IGZyb20gJ2RvdGVudidcbmltcG9ydCBTZXF1ZWxpemUgZnJvbSAnc2VxdWVsaXplJ1xuXG5jb25zdCBhcHAgPSBleHByZXNzKClcbi8vIHBhcnNlIGFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZFxuYXBwLnVzZShib2R5UGFyc2VyLnVybGVuY29kZWQoeyBleHRlbmRlZDogZmFsc2UgfSkpXG4gXG4vLyBwYXJzZSBhcHBsaWNhdGlvbi9qc29uXG5hcHAudXNlKGJvZHlQYXJzZXIuanNvbigpKVxuIFxuXG5jb25zdCBzZXF1ZWxpemUgPSBuZXcgU2VxdWVsaXplKCdub2RlJywgJ3Jvb3QnLCAnJywge1xuICAgIGhvc3Q6ICdsb2NhbGhvc3QnLFxuICAgIGRpYWxlY3Q6ICdteXNxbCdcbiAgfSk7XG5cbiAgc2VxdWVsaXplXG4gIC5hdXRoZW50aWNhdGUoKVxuICAudGhlbigoKSA9PiB7XG4gICAgY29uc29sZS5sb2coJ0Nvbm5lY3Rpb24gaGFzIGJlZW4gZXN0YWJsaXNoZWQgc3VjY2Vzc2Z1bGx5LicpO1xuICB9KVxuICAuY2F0Y2goZXJyID0+IHtcbiAgICBjb25zb2xlLmVycm9yKCdVbmFibGUgdG8gY29ubmVjdCB0byB0aGUgZGF0YWJhc2U6JywgZXJyKTtcbiAgfSk7XG4gIFxuXG5kb3RlbnYuY29uZmlnKClcblxuXG5hcHAuZ2V0KCcvc3R1ZGVudCcsYXN5bmMgKHJlcSxyZXMpPT57XG4gICAgbGV0IHJlc3VsdCA9IGF3YWl0IHNlcXVlbGl6ZS5xdWVyeShcIlNlbGVjdCAqIGZyb20gc3R1ZGVudFwiKVxuICAgIHJlcy5qc29uKHJlc3VsdFswXSlcbn0pXG5cbmFwcC5wb3N0KCcvc3R1ZGVudC9zaW5nbGUnLGFzeW5jIChyZXEscmVzKT0+e1xuICBsZXQgcmVzdWx0ID0gYXdhaXQgc2VxdWVsaXplLnF1ZXJ5KGBTZWxlY3QgKiBmcm9tIHN0dWRlbnQgd2hlcmUgaWQ9JHtyZXEuYm9keS5pZH1gKVxuICByZXMuanNvbihyZXN1bHRbMF0pXG59KVxuXG5hcHAucG9zdCgnL3N0dWRlbnQvc2VhcmNoJyxhc3luYyAocmVxLHJlcyk9PntcbiAgbGV0IHJlc3VsdCA9IGF3YWl0IHNlcXVlbGl6ZS5xdWVyeShgU2VsZWN0ICogZnJvbSBzdHVkZW50IHdoZXJlIG5hbWUgbGlrZSAnJSR7cmVxLmJvZHkubmFtZX0lJ2ApXG4gIHJlcy5qc29uKHJlc3VsdFswXSlcbn0pXG5hcHAucG9zdCgnL3N0dWRlbnQnLGFzeW5jIChyZXEscmVzKT0+e1xuICAgIGxldCByZXN1bHQgPSBhd2FpdCBzZXF1ZWxpemUucXVlcnkoYEluc2VydCBpbnRvIHN0dWRlbnQgdmFsdWVzKG51bGwsJyR7cmVxLmJvZHkubmFtZX0nLCcke3JlcS5ib2R5Lm1vYmlsZX0nLCcke3JlcS5ib2R5LmFkZHJlc3N9JylgKVxuICAgIHJlcy5qc29uKHJlc3VsdClcbn0pXG5cbmFwcC5kZWxldGUoJy9zdHVkZW50Jyxhc3luYyAocmVxLHJlcyk9PntcbiAgbGV0IHJlc3VsdCA9IGF3YWl0IHNlcXVlbGl6ZS5xdWVyeShgRGVsZXRlIGZyb20gc3R1ZGVudCB3aGVyZSBpZD0ke3JlcS5ib2R5LmlkfWApXG4gIHJlcy5qc29uKHJlc3VsdClcbn0pXG5cbmFwcC5wdXQoJy9zdHVkZW50Jyxhc3luYyAocmVxLHJlcyk9PntcbiAgbGV0IHJlc3VsdCA9IGF3YWl0IHNlcXVlbGl6ZS5xdWVyeShgVXBkYXRlIHN0dWRlbnQgc2V0IG5hbWU9JyR7cmVxLmJvZHkubmFtZX0nLG1vYmlsZT0nJHtyZXEuYm9keS5tb2JpbGV9JyxhZGRyZXNzPScke3JlcS5ib2R5LmFkZHJlc3N9JyB3aGVyZSBpZD0ke3JlcS5ib2R5LmlkfWApXG4gIHJlcy5qc29uKHJlc3VsdClcbn0pXG5cblxuXG5hcHAubGlzdGVuKHByb2Nlc3MuZW52LlBPUlQsKCk9PntcbiAgICBjb25zb2xlLmxvZyhcIlNlcnZlciBTdGFydGVkXCIpXG59KSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "app",
        "use",
        "bodyParser",
        "urlencoded",
        "extended",
        "json",
        "sequelize",
        "Sequelize",
        "host",
        "dialect",
        "authenticate",
        "then",
        "console",
        "log",
        "err",
        "error",
        "dotenv",
        "config",
        "get",
        "req",
        "res",
        "query",
        "result",
        "post",
        "body",
        "id",
        "name",
        "mobile",
        "address",
        "put",
        "listen",
        "process",
        "env",
        "PORT"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;;;;;;;AAEA,IAAMA,GAAG,GAAG,0BAAZ,C,CACA;;AACAA,GAAG,CAACC,GAAJ,CAAQC,uBAAWC,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR,E,CAEA;;AACAJ,GAAG,CAACC,GAAJ,CAAQC,uBAAWG,IAAX,EAAR;AAGA,IAAMC,SAAS,GAAG,IAAIC,qBAAJ,CAAc,MAAd,EAAsB,MAAtB,EAA8B,EAA9B,EAAkC;AAChDC,EAAAA,IAAI,EAAE,WAD0C;AAEhDC,EAAAA,OAAO,EAAE;AAFuC,CAAlC,CAAlB;AAKEH,SAAS,CACRI,YADD,GAECC,IAFD,CAEM,YAAM;AACVC,EAAAA,OAAO,CAACC,GAAR,CAAY,+CAAZ;AACD,CAJD,WAKO,UAAAC,GAAG,EAAI;AACZF,EAAAA,OAAO,CAACG,KAAR,CAAc,oCAAd,EAAoDD,GAApD;AACD,CAPD;;AAUFE,mBAAOC,MAAP;;AAGAjB,GAAG,CAACkB,GAAJ,CAAQ,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAmB,iBAAOC,GAAP,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACId,SAAS,CAACe,KAAV,CAAgB,uBAAhB,CADJ;;AAAA;AACXC,YAAAA,MADW;AAEfF,YAAAA,GAAG,CAACf,IAAJ,CAASiB,MAAM,CAAC,CAAD,CAAf;;AAFe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AAAA;AAAA;AAAA;AAAA;AAKAtB,GAAG,CAACuB,IAAJ,CAAS,iBAAT;AAAA;AAAA;AAAA;AAAA;AAAA,0BAA2B,kBAAOJ,GAAP,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACNd,SAAS,CAACe,KAAV,0CAAkDF,GAAG,CAACK,IAAJ,CAASC,EAA3D,EADM;;AAAA;AACrBH,YAAAA,MADqB;AAEzBF,YAAAA,GAAG,CAACf,IAAJ,CAASiB,MAAM,CAAC,CAAD,CAAf;;AAFyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA3B;;AAAA;AAAA;AAAA;AAAA;AAKAtB,GAAG,CAACuB,IAAJ,CAAS,iBAAT;AAAA;AAAA;AAAA;AAAA;AAAA,0BAA2B,kBAAOJ,GAAP,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACNd,SAAS,CAACe,KAAV,mDAA2DF,GAAG,CAACK,IAAJ,CAASE,IAApE,QADM;;AAAA;AACrBJ,YAAAA,MADqB;AAEzBF,YAAAA,GAAG,CAACf,IAAJ,CAASiB,MAAM,CAAC,CAAD,CAAf;;AAFyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA3B;;AAAA;AAAA;AAAA;AAAA;AAIAtB,GAAG,CAACuB,IAAJ,CAAS,UAAT;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAoB,kBAAOJ,GAAP,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACGd,SAAS,CAACe,KAAV,4CAAoDF,GAAG,CAACK,IAAJ,CAASE,IAA7D,gBAAuEP,GAAG,CAACK,IAAJ,CAASG,MAAhF,gBAA4FR,GAAG,CAACK,IAAJ,CAASI,OAArG,QADH;;AAAA;AACZN,YAAAA,MADY;AAEhBF,YAAAA,GAAG,CAACf,IAAJ,CAASiB,MAAT;;AAFgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AAAA;AAAA;AAAA;AAAA;AAKAtB,GAAG,UAAH,CAAW,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAsB,kBAAOmB,GAAP,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACDd,SAAS,CAACe,KAAV,wCAAgDF,GAAG,CAACK,IAAJ,CAASC,EAAzD,EADC;;AAAA;AAChBH,YAAAA,MADgB;AAEpBF,YAAAA,GAAG,CAACf,IAAJ,CAASiB,MAAT;;AAFoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtB;;AAAA;AAAA;AAAA;AAAA;AAKAtB,GAAG,CAAC6B,GAAJ,CAAQ,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAmB,kBAAOV,GAAP,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACEd,SAAS,CAACe,KAAV,oCAA4CF,GAAG,CAACK,IAAJ,CAASE,IAArD,uBAAsEP,GAAG,CAACK,IAAJ,CAASG,MAA/E,wBAAmGR,GAAG,CAACK,IAAJ,CAASI,OAA5G,wBAAiIT,GAAG,CAACK,IAAJ,CAASC,EAA1I,EADF;;AAAA;AACbH,YAAAA,MADa;AAEjBF,YAAAA,GAAG,CAACf,IAAJ,CAASiB,MAAT;;AAFiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AAAA;AAAA;AAAA;AAAA;AAOAtB,GAAG,CAAC8B,MAAJ,CAAWC,OAAO,CAACC,GAAR,CAAYC,IAAvB,EAA4B,YAAI;AAC5BrB,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACH,CAFD",
      "sourceRoot": "/Users/shripal/Desktop/NodebabelSetup",
      "sourcesContent": [
        "import express from 'express'\nimport bodyParser from 'body-parser'\nimport dotenv from 'dotenv'\nimport Sequelize from 'sequelize'\n\nconst app = express()\n// parse application/x-www-form-urlencoded\napp.use(bodyParser.urlencoded({ extended: false }))\n \n// parse application/json\napp.use(bodyParser.json())\n \n\nconst sequelize = new Sequelize('node', 'root', '', {\n    host: 'localhost',\n    dialect: 'mysql'\n  });\n\n  sequelize\n  .authenticate()\n  .then(() => {\n    console.log('Connection has been established successfully.');\n  })\n  .catch(err => {\n    console.error('Unable to connect to the database:', err);\n  });\n  \n\ndotenv.config()\n\n\napp.get('/student',async (req,res)=>{\n    let result = await sequelize.query(\"Select * from student\")\n    res.json(result[0])\n})\n\napp.post('/student/single',async (req,res)=>{\n  let result = await sequelize.query(`Select * from student where id=${req.body.id}`)\n  res.json(result[0])\n})\n\napp.post('/student/search',async (req,res)=>{\n  let result = await sequelize.query(`Select * from student where name like '%${req.body.name}%'`)\n  res.json(result[0])\n})\napp.post('/student',async (req,res)=>{\n    let result = await sequelize.query(`Insert into student values(null,'${req.body.name}','${req.body.mobile}','${req.body.address}')`)\n    res.json(result)\n})\n\napp.delete('/student',async (req,res)=>{\n  let result = await sequelize.query(`Delete from student where id=${req.body.id}`)\n  res.json(result)\n})\n\napp.put('/student',async (req,res)=>{\n  let result = await sequelize.query(`Update student set name='${req.body.name}',mobile='${req.body.mobile}',address='${req.body.address}' where id=${req.body.id}`)\n  res.json(result)\n})\n\n\n\napp.listen(process.env.PORT,()=>{\n    console.log(\"Server Started\")\n})"
      ]
    },
    "sourceType": "script",
    "mtime": 1560600199319
  }
}